// Code generated by mockery. DO NOT EDIT.

package iface_new_type_test

import mock "github.com/stretchr/testify/mock"

// MockInterface3 is an autogenerated mock type for the Interface3 type
type MockInterface3 struct {
	mock.Mock
}

type MockInterface3_Expecter struct {
	mock *mock.Mock
}

func (_m *MockInterface3) EXPECT() *MockInterface3_Expecter {
	return &MockInterface3_Expecter{mock: &_m.Mock}
}

// Method1 provides a mock function with no fields
func (_m *MockInterface3) Method1() {
	_m.Called()
}

// MockInterface3_Method1_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Method1'
type MockInterface3_Method1_Call struct {
	*mock.Call
}

// Method1 is a helper method to define mock.On call
func (_e *MockInterface3_Expecter) Method1() *MockInterface3_Method1_Call {
	return &MockInterface3_Method1_Call{Call: _e.mock.On("Method1")}
}

func (_c *MockInterface3_Method1_Call) Run(run func()) *MockInterface3_Method1_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockInterface3_Method1_Call) Return() *MockInterface3_Method1_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockInterface3_Method1_Call) RunAndReturn(run func()) *MockInterface3_Method1_Call {
	_c.Run(run)
	return _c
}

// NewMockInterface3 creates a new instance of MockInterface3. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockInterface3(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockInterface3 {
	mock := &MockInterface3{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
